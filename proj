#!/bin/bash

PROJECT="node-typescript-monorepo-template"

COMPOSE_FILE="./docker-compose.yml"
COMPOSE="docker compose -p $PROJECT -f $COMPOSE_FILE"

SERVICES=$($COMPOSE config --services)

filter_service_type() {
  echo "$SERVICES" | grep -E "($1|common)"
}

soft_prune() {
  docker image prune -f && \
  docker container prune -f
}

check_valid_service() {
  ./scripts/validate-service.sh $1
}

logs() {
  if [ -z "$1" ]; then
    $COMPOSE logs -f $SERVICES
  else
    $COMPOSE logs -f $(filter_service_type $1)
  fi
}

down() {
  $COMPOSE down --remove-orphans $($SERVICES | grep -vE "dev-container")
  docker volume rm $(docker volume ls -q | grep -E "$PROJECT.*\-ephemeral$")
}

build() {
  if [ -z "$1" ]; then
    $COMPOSE build $SERVICES
  else
    $COMPOSE build $(filter_service_type $1)
  fi
}

run() {
  soft_prune
  check_valid_service $1
  build $1
  down
  $COMPOSE up -d $(filter_service_type $1)
}

install() {
  npm install && npm install -ws
  npm run build -w packages
}

# Exposed Commands
case "$1" in
  "logs") logs "${@:2}" ;;
  "down") down ;;
  "build") build "${@:2}" ;;
  "build:dev") build dev ;;
  "build:prod") build prod ;;
  "start") run "${@:2}" ;;
  "start:dev") run dev ;;
  "start:prod") run prod ;;
  "install") install ;;
  *) echo "Invalid command" ;;
esac

exit 0
